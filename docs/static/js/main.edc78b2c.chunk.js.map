{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","Categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,0DAE2CC,UAAUH,GAFrD,sDAIII,MAAMF,GAJV,cAITG,EAJS,gBAMMA,EAAKC,OANX,uBAMRC,EANQ,EAMRA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZ3B,kBAgBTM,GAhBS,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,iDAAf,UACI,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAKN,QCCnBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECJX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAfAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIvB,CAACpB,IAKIqB,EDdwBK,CAAa1B,GAAhCa,EAJuB,EAI5BN,KAAaa,EAJe,EAIfA,QAIpB,MAAgB,KAAbpB,EACQ,oEAGH,qCACI,qBAAIgB,UAAU,sBAAd,wBAAgDhB,EAAhD,OAECoB,GAAW,mBAAGJ,UAAU,iBAAb,wBAEZ,qBAAKA,UAAU,WAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAGQA,GAFCA,EAAIC,aEWtBgB,EAlCM,WAAO,IAAD,EAEazC,mBAAS,CAAC,KAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAUvB,OACI,qCACI,8CACA,4DACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OAEnB,aADA,CACC,EAAD,CAEIA,SAAUA,GADLA,YCxBjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.edc78b2c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n// import GifExpertApp from '../GifExpertApp'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categ => [inputValue, ...categ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    \r\n    \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>  \r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n","\r\nexport const getGifs = async(category) => {\r\n\r\n   const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=MEV0hEWvzezWBCiCkJUAKldDd5mLbw6t`;\r\n\r\n        const resp = await fetch(url);\r\n    \r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n       return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate\">\r\n            <p>{title}</p>\r\n            <img src={url} alt={title} />\r\n              \r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\r\n// import { getGifs } from '../Helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import GifExpertApp from '../GifExpertApp';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    // getGifs();\r\n\r\n    if(category === \"\"){\r\n        return \"Busque una categoria y presione la tecla Enter para buscar el Gif\";\r\n    }else{\r\n        return (\r\n            <>\r\n                <h3 className=\"animate__fadeInDown\">Categoria: {category} </h3>\r\n    \r\n                {loading && <p className=\"animate__flash\">Loading...</p>}\r\n    \r\n                <div className=\"cardGrid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            // img={img}\r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            </>\r\n            \r\n        );\r\n    }\r\n    \r\n    \r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../Helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n     \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n            });\r\n    },[category])\r\n\r\n\r\n    \r\n\r\n    return state;\r\n\r\n};","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\n// const categories = ['One Punch','Samurai X','Dragon Ball'];\r\nconst GifExpertApp = () => {\r\n\r\n    const [Categories, setCategories] = useState(['']);\r\n\r\n    // const handleAdd = () => {\r\n    //     const categ = 'Hunter X Hunter';\r\n    //     // setCategories([...Categories, categ]);\r\n    //     setCategories( cat => [...cat, categ])\r\n    // };\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <h3> Seleccione una categoria </h3>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            {/* <button onClick={handleAdd} > Agregar </button> */}\r\n\r\n            <ol>\r\n                {\r\n                    Categories.map(category => (\r\n                        // return <li key={category} >{category}</li>\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from '../src/GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}